import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import styled from "styled-components";
import Button from "@mui/material/Button";
import Typography from "@mui/material/Typography";
import SearchIcon from "@mui/icons-material/Search";
import api from "@/api/api";
import TextField from "@mui/material/TextField";
import { useState, useEffect } from "react";

export default function Home() {
  const [slip, setSlip] = useState([]);
  const [slips, setSlips] = useState([]);
  const [favorites, setFavorites] = useState([]);

  /*---------------------Obtener el texto de consulta--------------------------------*/
  const getAdvices = async (texto) => {
    try {
      const responseAdvices = await api.get("/advice/search/" + texto);
      console.log("response", responseAdvices.data.slips);
      setSlips(responseAdvices.data.slips);
    } catch (error) {}
  };
  /*-----------------------------------------------------*/

  const getAdvice = async () => {
    try {
      const response = await api.get("/advice");
      setSlip(response.data.slip);
    } catch (error) {}
  };

  const getAdviceRandom = async () => {
    try {
      var num = Math.floor(Math.random() * (200 - 1) + 1);
      const response = await api.get("/advice/" + num);
      console.log("response", response);
      setSlip(response.data);
    } catch (error) {}
  };

  const setAdvice = () => {
    setFavorites(slip);
  };

  useEffect(() => {
    getAdvice();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>John Vásconez Examen Final</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <GridContainer>
          {/*---------------------------ALEATORIO---------------------------- */}
          <Grid1>
            <StyledTypography align="center" variant="h4">
              Consejo del día
            </StyledTypography>
            <StyledTypography align="center" variant="body1">
              {slip.advice}
            </StyledTypography>
            <StyledButton
              variant="contained"
              disableElevation="true"
              onClick={setAdvice}
            >
              Marcar como favorito
            </StyledButton>
            <StyledButton
              variant="contained"
              startIcon={<SearchIcon />}
              onClick={getAdvice}
            >
              Siguiente consejo
            </StyledButton>
          </Grid1>

          {/*---------------------------FAVORITOS---------------------------- */}

          <Grid2>
            <StyledTypography align="center" variant="h4">
              Consejos favoritos
            </StyledTypography>
            <StyledTypography align="center" variant="body1">
              {favorites.advice}
            </StyledTypography>
          </Grid2>

          {/*---------------------------BUSCAR---------------------------- */}
          <Item3>
            <Grid3>
              <StyledTypography align="center" variant="h4">
                Buscador de consejos
              </StyledTypography>

              <StyledTextField
                required
                id="outlined-required"
                label="Palabra clave"
              />

              <StyledButtonI
                variant="contained"
                startIcon={<SearchIcon />}
                onClick={() => {
                  let texto =
                    document.getElementById("outlined-required").value;
                  console.log(texto);
                  getAdvices(texto);
                }}
              >
                Buscar
              </StyledButtonI>

              <StyledTypographyB align="center" variant="h5">
                Resultados de la búsqueda
              </StyledTypographyB>
              <StyledTypographyT align="center" variant="body1">
                TEXTO
              </StyledTypographyT>
              {slips.map((advicequery) => {
                <div key={advicequery.id}>
                  <StyledTypography align="center" variant="body1">
                    {advicequery.advice}
                  </StyledTypography>
                </div>;
                <div>boton</div>;
              })}
            </Grid3>
          </Item3>
        </GridContainer>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

/*--------Estilos con styled components----------------*/
const GridContainer = styled.div`
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto;
  justify-content: space-evenly;
  grid-gap: 200px 300px;
`;

const Grid1 = styled.div`
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto auto;
`;

const Grid2 = styled.div`
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto;
`;

const Grid3 = styled.div`
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto auto auto auto auto auto;
`;

const Item3 = styled.div`
  grid-column: 1 / 3;
`;

const StyledButton = styled(Button)`
  background: #1890ff;
  text-align: center;
  text-decoration: none;
  color: #ffffff;
  font-size: 12px;
  margin: 10px;
`;

const StyledButtonI = styled(Button)`
  grid-column: 1 / 3;
  background: #1890ff;
  text-align: center;
  text-decoration: none;
  color: #ffffff;
  font-size: 12px;
  margin: 10px;
`;

const StyledTypography = styled(Typography)`
  grid-column: 1 / 3;
  color: #595959;
  font-weight: bold;
`;

const StyledTypographyB = styled(Typography)`
  grid-column: 1 / 3;
  color: #595959;
`;

const StyledTypographyT = styled(Typography)`
  color: #595959;
  font-weight: bold;
`;

const StyledTextField = styled(TextField)`
  grid-column: 1 / 3;
`;
